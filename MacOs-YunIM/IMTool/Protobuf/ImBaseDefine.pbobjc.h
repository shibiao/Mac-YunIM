// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: IM.BaseDefine.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_GEN_VERSION != 30001
#error This file was generated by a different version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum ServiceID

/// service id
typedef GPB_ENUM(ServiceID) {
  /// Value used if any message's field encounters a value that is not defined
  /// by this enum. The message will also have C functions to get/set the rawValue
  /// of the field.
  ServiceID_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  ServiceID_SidUnused = 0,

  /// for login
  ServiceID_SidLogin = 1,

  /// for IM
  ServiceID_SidMsg = 3,
  ServiceID_SidOther = 7,
};

GPBEnumDescriptor *ServiceID_EnumDescriptor(void);

/// Checks to see if the given value is defined by the enum or was not known at
/// the time this source was generated.
BOOL ServiceID_IsValidValue(int32_t value);

#pragma mark - Enum LoginCmdID

/// command id for login
typedef GPB_ENUM(LoginCmdID) {
  /// Value used if any message's field encounters a value that is not defined
  /// by this enum. The message will also have C functions to get/set the rawValue
  /// of the field.
  LoginCmdID_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  LoginCmdID_CidLoginUnused = 0,

  /// 登陆
  LoginCmdID_CidLoginReqUserlogin = 259,
  LoginCmdID_CidLoginResUserlogin = 260,

  /// 登出
  LoginCmdID_CidLoginReqUserlogout = 261,
  LoginCmdID_CidLoginResUserlogout = 262,
};

GPBEnumDescriptor *LoginCmdID_EnumDescriptor(void);

/// Checks to see if the given value is defined by the enum or was not known at
/// the time this source was generated.
BOOL LoginCmdID_IsValidValue(int32_t value);

#pragma mark - Enum MessageCmdID

/// command id for msg
typedef GPB_ENUM(MessageCmdID) {
  /// Value used if any message's field encounters a value that is not defined
  /// by this enum. The message will also have C functions to get/set the rawValue
  /// of the field.
  MessageCmdID_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  MessageCmdID_CidMsgUnused = 0,
  MessageCmdID_CidMsgData = 769,
  MessageCmdID_CidMsgDataAck = 770,
};

GPBEnumDescriptor *MessageCmdID_EnumDescriptor(void);

/// Checks to see if the given value is defined by the enum or was not known at
/// the time this source was generated.
BOOL MessageCmdID_IsValidValue(int32_t value);

#pragma mark - Enum OtherCmdID

typedef GPB_ENUM(OtherCmdID) {
  /// Value used if any message's field encounters a value that is not defined
  /// by this enum. The message will also have C functions to get/set the rawValue
  /// of the field.
  OtherCmdID_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  OtherCmdID_CidOtherUnused = 0,
  OtherCmdID_CidOtherHeartbeat = 1793,
  OtherCmdID_CidOtherStopRecvPacket = 1794,
};

GPBEnumDescriptor *OtherCmdID_EnumDescriptor(void);

/// Checks to see if the given value is defined by the enum or was not known at
/// the time this source was generated.
BOOL OtherCmdID_IsValidValue(int32_t value);

#pragma mark - Enum ResultType

typedef GPB_ENUM(ResultType) {
  /// Value used if any message's field encounters a value that is not defined
  /// by this enum. The message will also have C functions to get/set the rawValue
  /// of the field.
  ResultType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  ResultType_Ok = 0,
  ResultType_Refused = 1,
};

GPBEnumDescriptor *ResultType_EnumDescriptor(void);

/// Checks to see if the given value is defined by the enum or was not known at
/// the time this source was generated.
BOOL ResultType_IsValidValue(int32_t value);

#pragma mark - Enum UserStatType

typedef GPB_ENUM(UserStatType) {
  /// Value used if any message's field encounters a value that is not defined
  /// by this enum. The message will also have C functions to get/set the rawValue
  /// of the field.
  UserStatType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  UserStatType_UserStatusUnknown = 0,

  /// 在线
  UserStatType_UserStatusOnline = 1,

  /// 离线
  UserStatType_UserStatusOffline = 2,

  /// 离开
  UserStatType_UserStatusLeave = 3,

  /// 潜水
  UserStatType_UserStatusHidden = 4,

  /// 忙碌
  UserStatType_UserStatusBusy = 5,
};

GPBEnumDescriptor *UserStatType_EnumDescriptor(void);

/// Checks to see if the given value is defined by the enum or was not known at
/// the time this source was generated.
BOOL UserStatType_IsValidValue(int32_t value);

#pragma mark - Enum ClientType

typedef GPB_ENUM(ClientType) {
  /// Value used if any message's field encounters a value that is not defined
  /// by this enum. The message will also have C functions to get/set the rawValue
  /// of the field.
  ClientType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  ClientType_ClientTypeUnknown = 0,
  ClientType_ClientTypeAndroid = 1,
  ClientType_ClientTypeIos = 2,
  ClientType_ClientTypeWindows = 3,
  ClientType_ClientTypeMac = 4,
  ClientType_ClientTypeWebim = 5,
  ClientType_ClientTypeIosWatch = 6,
};

GPBEnumDescriptor *ClientType_EnumDescriptor(void);

/// Checks to see if the given value is defined by the enum or was not known at
/// the time this source was generated.
BOOL ClientType_IsValidValue(int32_t value);

#pragma mark - ImBaseDefineRoot

/// Exposes the extension registry for this file.
///
/// The base class provides:
/// @code
///   + (GPBExtensionRegistry *)extensionRegistry;
/// @endcode
/// which is a @c GPBExtensionRegistry that includes all the extensions defined by
/// this file and all files that it depends on.
@interface ImBaseDefineRoot : GPBRootObject
@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
